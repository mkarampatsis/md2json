{"introduction":["<p>casting in python is a process of converting a variable from one data type to another. you can use built-in functions to cast variables to different data types, such as int(), float(), and str(). here's a brief explanation of each:</p>","<ol>\n<li>int(): casts a variable to an integer. if the input is a float, it will truncate the decimal part. if the input is a string, it must represent a valid integer; otherwise, a valueerror will be raised.</li>\n<li>float(): casts a variable to a floating-point number. if the input is an integer, it will add a decimal part (e.g., 3 becomes 3.0). if the input is a string, it must represent a valid float; otherwise, a valueerror will be raised.</li>\n<li>str(): casts a variable to a string. if the input is an integer or a float, it will convert the number to its string representation.</li>\n</ol>","<p>here are some examples of casting in python:</p>","<pre><code class=\"py3 language-py3\"># casting an integer to a float\nint_value = 5\nfloat_value = float(int_value)\nprint(float_value)  # output: 5.0\n\n# casting a float to an integer\nfloat_value = 5.7\nint_value = int(float_value)\nprint(int_value)  # output: 5 (truncated)\n\n# casting a string to an integer\nstring_value = \"10\"\nint_value = int(string_value)\nprint(int_value)  # output: 10\n\n# casting an integer to a string\nint_value = 42\nstring_value = str(int_value)\nprint(string_value)  # output: \"42\"\n\n# casting a string to a float\nstring_value = \"3.14\"\nfloat_value = float(string_value)\nprint(float_value)  # output: 3.14\n</code></pre>","<p>keep in mind that not all values can be cast to all data types. for example, attempting to cast a non-numeric string to an integer or a float will raise a valueerror.</p>"],"subintroduction":["<p>complex type casting, also known as explicit type casting, is a technique used in programming to convert data from one type to another. specifically, complex type casting involves converting data between complex number types, which are numbers in the form a + bi, where a and b are real numbers and i is the imaginary unit.</p>","<p>in python, complex type casting is done explicitly by using the complex() function. this function takes two arguments: the real part of the complex number and the imaginary part of the complex number. for example, to cast the integer 3 and the float 2.5 to a complex number, we can use the following code:</p>","<pre><code class=\"py3 language-py3\">x = complex(3, 2.5)\n</code></pre>","<p>this will create a complex number with a real part of 3 and an imaginary part of 2.5i.</p>"],"exercise_description":["<p>create a complex number from a negative float and a positive integer. (input: x = -2.75, y = 4)</p>"],"hints":[{"text":"<p>the <code>complex()</code> function takes two arguments: the real part and the imaginary part.</p>","code":"","penalty":"<p>20 points</p>"},{"text":"<p>1</p>","code":"","penalty":""}],"outputdata":["type=oneline\n(-2.75+4j)"],"difficulty":[],"author":{"name":"Christos Hadjichristofi","email":"christoshadjichristofi@hotmail.com"},"exercise":"exercise 9","type":"python","category":{"chapter":"python casting","subchapter":[{"chapter":"python casting","subchapter":["what is complex type casting"]}]},"code":"x = -2.75\ny = 4\nz = complex(x, y)\nprint(z)\n"}